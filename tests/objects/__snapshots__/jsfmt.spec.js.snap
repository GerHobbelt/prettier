// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`expand.js - babylon-verify: expand.js 1`] = `
const Component1 = ({ props }) => (
  <Text>Test</Text>
);

const Component2 = ({
  props
}) => (
  <Text>Test</Text>
);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
const Component1 = ({ props }) => <Text>Test</Text>;

const Component2 = ({ props }) => <Text>Test</Text>;

`;

exports[`expression.js - babylon-verify: expression.js 1`] = `
() => ({}\`\`);
({})\`\`;
a = () => ({}).x;
({} && a, b);
({}::b, 0);
({}::b()\`\`[''].c++ && 0 ? 0 : 0, 0);
({}(), 0);
({} = 0);
(({} = 0), 1);
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
() => ({}\`\`);
({}\`\`);
a = () => ({}.x);
({} && a, b);
({}::b, 0);
({}::b()\`\`[""].c++ && 0 ? 0 : 0, 0);
({}(), 0);
({} = 0);
({} = 0), 1;

`;

exports[`method.js - babylon-verify: method.js 1`] = `
a = { f() {} }
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
a = { f() {} };

`;

exports[`range.js - babylon-verify: range.js 1`] = `
group(
  concat([
    "(",
    indent(
      options.tabWidth,
      concat([line, join(concat([",", line]), printed)])
    ),
    options.trailingComma ? "," : "",
    line,
    ")"
  ]),
  {shouldBreak: true}
)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
group(
  concat([
    "(",
    indent(
      options.tabWidth,
      concat([line, join(concat([",", line]), printed)])
    ),
    options.trailingComma ? "," : "",
    line,
    ")"
  ]),
  { shouldBreak: true }
);

`;

exports[`right_break.js - babylon-verify: right_break.js 1`] = `
const blablah =
  "aldkfkladfskladklsfkladklfkaldfadfkdaf" +
  "adlfasdklfkldsklfakldsfkladsfkadsfladsfa" +
  "dflkadfkladsfklkadlfkladlfkadklfjadlfdfdaf";

const k = {
  blablah: "aldkfkladfskladklsfkladklfkaldfadfkdaf" +
    "adlfasdklfkldsklfakldsfkladsfkadsfladsfa" +
    "dflkadfkladsfklkadlfkladlfkadklfjadlfdfdaf"
};

somethingThatsAReallyLongPropName =
  this.props.cardType === AwesomizerCardEnum.SEEFIRST;

const o = {
  somethingThatsAReallyLongPropName:
    this.props.cardType === AwesomizerCardEnum.SEEFIRST,
};
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
const blablah =
  "aldkfkladfskladklsfkladklfkaldfadfkdaf" +
  "adlfasdklfkldsklfakldsfkladsfkadsfladsfa" +
  "dflkadfkladsfklkadlfkladlfkadklfjadlfdfdaf";

const k = {
  blablah:
    "aldkfkladfskladklsfkladklfkaldfadfkdaf" +
    "adlfasdklfkldsklfakldsfkladsfkadsfladsfa" +
    "dflkadfkladsfklkadlfkladlfkadklfjadlfdfdaf"
};

somethingThatsAReallyLongPropName =
  this.props.cardType === AwesomizerCardEnum.SEEFIRST;

const o = {
  somethingThatsAReallyLongPropName:
    this.props.cardType === AwesomizerCardEnum.SEEFIRST
};

`;
